using  System;
using  System.Collections.Generic;
using  System.Linq.Expressions;
using  System.Web;
using  Umbraco.Core.Models;
using  Umbraco.Core.Models.PublishedContent;
using  Umbraco.Web;
using  Umbraco.ModelsBuilder;
using  Umbraco.ModelsBuilder.Umbraco;
[assembly: PureLiveAssembly]
[assembly:ModelsBuilderAssembly(PureLive = true, SourceHash = "93c304deccdb975b")]
[assembly:System.Reflection.AssemblyVersion("0.0.0.1")]


// FILE: models.generated.cs

//------------------------------------------------------------------------------
// <auto-generated>
//   This code was generated by a tool.
//
//    Umbraco.ModelsBuilder v3.0.10.102
//
//   Changes to this file will be lost if the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------















namespace Umbraco.Web.PublishedContentModels
{
	// Mixin content Type 1090 with alias "SharedProperties01"
	/// <summary>Shared Properties 01</summary>
	public partial interface ISharedProperties01 : IPublishedContent
	{
	}

	/// <summary>Shared Properties 01</summary>
	[PublishedContentModel("SharedProperties01")]
	public partial class SharedProperties01 : PublishedContentModel, ISharedProperties01
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "SharedProperties01";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SharedProperties01(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SharedProperties01, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Home</summary>
	[PublishedContentModel("Home")]
	public partial class Home : SharedProperties01, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Home";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Home(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Home, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address 01
		///</summary>
		[ImplementPropertyType("address01")]
		public string Address01
		{
			get { return this.GetPropertyValue<string>("address01"); }
		}

		///<summary>
		/// Address 02
		///</summary>
		[ImplementPropertyType("address02")]
		public string Address02
		{
			get { return this.GetPropertyValue<string>("address02"); }
		}

		///<summary>
		/// Category 01
		///</summary>
		[ImplementPropertyType("category01")]
		public object Category01
		{
			get { return this.GetPropertyValue("category01"); }
		}

		///<summary>
		/// Category 01 Icon
		///</summary>
		[ImplementPropertyType("category01Icon")]
		public object Category01Icon
		{
			get { return this.GetPropertyValue("category01Icon"); }
		}

		///<summary>
		/// Category 02
		///</summary>
		[ImplementPropertyType("category02")]
		public object Category02
		{
			get { return this.GetPropertyValue("category02"); }
		}

		///<summary>
		/// Category 02 Icon
		///</summary>
		[ImplementPropertyType("category02Icon")]
		public object Category02Icon
		{
			get { return this.GetPropertyValue("category02Icon"); }
		}

		///<summary>
		/// Category 03
		///</summary>
		[ImplementPropertyType("category03")]
		public object Category03
		{
			get { return this.GetPropertyValue("category03"); }
		}

		///<summary>
		/// Category 03 Icon
		///</summary>
		[ImplementPropertyType("category03Icon")]
		public object Category03Icon
		{
			get { return this.GetPropertyValue("category03Icon"); }
		}

		///<summary>
		/// Category 04
		///</summary>
		[ImplementPropertyType("category04")]
		public object Category04
		{
			get { return this.GetPropertyValue("category04"); }
		}

		///<summary>
		/// Category 04 Icon
		///</summary>
		[ImplementPropertyType("category04Icon")]
		public object Category04Icon
		{
			get { return this.GetPropertyValue("category04Icon"); }
		}

		///<summary>
		/// Category 05
		///</summary>
		[ImplementPropertyType("category05")]
		public object Category05
		{
			get { return this.GetPropertyValue("category05"); }
		}

		///<summary>
		/// Category 05 Icon
		///</summary>
		[ImplementPropertyType("category05Icon")]
		public object Category05Icon
		{
			get { return this.GetPropertyValue("category05Icon"); }
		}

		///<summary>
		/// Category 06
		///</summary>
		[ImplementPropertyType("category06")]
		public object Category06
		{
			get { return this.GetPropertyValue("category06"); }
		}

		///<summary>
		/// Category 06 Icon
		///</summary>
		[ImplementPropertyType("category06Icon")]
		public object Category06Icon
		{
			get { return this.GetPropertyValue("category06Icon"); }
		}

		///<summary>
		/// Category 07
		///</summary>
		[ImplementPropertyType("category07")]
		public object Category07
		{
			get { return this.GetPropertyValue("category07"); }
		}

		///<summary>
		/// Category 07 Icon
		///</summary>
		[ImplementPropertyType("category07Icon")]
		public object Category07Icon
		{
			get { return this.GetPropertyValue("category07Icon"); }
		}

		///<summary>
		/// Category 08
		///</summary>
		[ImplementPropertyType("category08")]
		public object Category08
		{
			get { return this.GetPropertyValue("category08"); }
		}

		///<summary>
		/// Category 08 Icon
		///</summary>
		[ImplementPropertyType("category08Icon")]
		public object Category08Icon
		{
			get { return this.GetPropertyValue("category08Icon"); }
		}

		///<summary>
		/// Category 09
		///</summary>
		[ImplementPropertyType("category09")]
		public object Category09
		{
			get { return this.GetPropertyValue("category09"); }
		}

		///<summary>
		/// Category 09 Icon
		///</summary>
		[ImplementPropertyType("category09Icon")]
		public object Category09Icon
		{
			get { return this.GetPropertyValue("category09Icon"); }
		}

		///<summary>
		/// City
		///</summary>
		[ImplementPropertyType("city_company")]
		public string City_company
		{
			get { return this.GetPropertyValue<string>("city_company"); }
		}

		///<summary>
		/// CompanyName
		///</summary>
		[ImplementPropertyType("companyName")]
		public string CompanyName
		{
			get { return this.GetPropertyValue<string>("companyName"); }
		}

		///<summary>
		/// Copyright Title: The name that is to appear next to the copyright information.
		///</summary>
		[ImplementPropertyType("copyrightTitle")]
		public string CopyrightTitle
		{
			get { return this.GetPropertyValue<string>("copyrightTitle"); }
		}

		///<summary>
		/// Facebook Url: Example: http://www.SOMEDOMAIN.COM
		///</summary>
		[ImplementPropertyType("facebookUrl")]
		public string FacebookUrl
		{
			get { return this.GetPropertyValue<string>("facebookUrl"); }
		}

		///<summary>
		/// Fax
		///</summary>
		[ImplementPropertyType("fax_company")]
		public string Fax_company
		{
			get { return this.GetPropertyValue<string>("fax_company"); }
		}

		///<summary>
		/// Home Banner
		///</summary>
		[ImplementPropertyType("homeBanner")]
		public object HomeBanner
		{
			get { return this.GetPropertyValue("homeBanner"); }
		}

		///<summary>
		/// How This Works Video: Just provide the video's call value, not the full url. [Youtube only for now.]
		///</summary>
		[ImplementPropertyType("howThisWorksVideo")]
		public string HowThisWorksVideo
		{
			get { return this.GetPropertyValue<string>("howThisWorksVideo"); }
		}

		///<summary>
		/// LinkedIn Url: Example: http://www.SOMEDOMAIN.COM
		///</summary>
		[ImplementPropertyType("linkedInUrl")]
		public string LinkedInUrl
		{
			get { return this.GetPropertyValue<string>("linkedInUrl"); }
		}

		///<summary>
		/// Phone
		///</summary>
		[ImplementPropertyType("phone_company")]
		public string Phone_company
		{
			get { return this.GetPropertyValue<string>("phone_company"); }
		}

		///<summary>
		/// Postal Code
		///</summary>
		[ImplementPropertyType("postalCode_company")]
		public string PostalCode_company
		{
			get { return this.GetPropertyValue<string>("postalCode_company"); }
		}

		///<summary>
		/// State
		///</summary>
		[ImplementPropertyType("state_company")]
		public string State_company
		{
			get { return this.GetPropertyValue<string>("state_company"); }
		}

		///<summary>
		/// Support Email: MWoO's support email.
		///</summary>
		[ImplementPropertyType("supportEmail")]
		public string SupportEmail
		{
			get { return this.GetPropertyValue<string>("supportEmail"); }
		}

		///<summary>
		/// Twitter Url: Example: http://www.SOMEDOMAIN.COM
		///</summary>
		[ImplementPropertyType("twitterUrl")]
		public string TwitterUrl
		{
			get { return this.GetPropertyValue<string>("twitterUrl"); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSocialChecker(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}

	/// <summary>Standard Page</summary>
	[PublishedContentModel("StandardPage")]
	public partial class StandardPage : SharedProperties01
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "StandardPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public StandardPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<StandardPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("content")]
		public IHtmlString Content
		{
			get { return this.GetPropertyValue<IHtmlString>("content"); }
		}

		///<summary>
		/// Description
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// Show In Footer
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return this.GetPropertyValue<bool>("showInFooter"); }
		}

		///<summary>
		/// Show In Navigation
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return this.GetPropertyValue<bool>("showInNavigation"); }
		}
	}

	/// <summary>Campaign</summary>
	[PublishedContentModel("Campaign")]
	public partial class Campaign : SharedProperties01, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Campaign";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Campaign(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Campaign, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Access Token
		///</summary>
		[ImplementPropertyType("accessToken")]
		public string AccessToken
		{
			get { return this.GetPropertyValue<string>("accessToken"); }
		}

		///<summary>
		/// Artistic
		///</summary>
		[ImplementPropertyType("artisticSubcategory")]
		public object ArtisticSubcategory
		{
			get { return this.GetPropertyValue("artisticSubcategory"); }
		}

		///<summary>
		/// Brief Summary: Provide a brief paragraph that can be displayed on the campaign panel.
		///</summary>
		[ImplementPropertyType("briefSummary")]
		public string BriefSummary
		{
			get { return this.GetPropertyValue<string>("briefSummary"); }
		}

		///<summary>
		/// Business
		///</summary>
		[ImplementPropertyType("businessSubcategories")]
		public object BusinessSubcategories
		{
			get { return this.GetPropertyValue("businessSubcategories"); }
		}

		///<summary>
		/// Campaign Complete: Indicates if this campaign has been completed and closed.
		///</summary>
		[ImplementPropertyType("campaignComplete")]
		public bool CampaignComplete
		{
			get { return this.GetPropertyValue<bool>("campaignComplete"); }
		}

		///<summary>
		/// Charity
		///</summary>
		[ImplementPropertyType("charitySubcategory")]
		public object CharitySubcategory
		{
			get { return this.GetPropertyValue("charitySubcategory"); }
		}

		///<summary>
		/// Community
		///</summary>
		[ImplementPropertyType("communitySubcategories")]
		public object CommunitySubcategories
		{
			get { return this.GetPropertyValue("communitySubcategories"); }
		}

		///<summary>
		/// Completion Date: The date that this campaign will be completed and closed.
		///</summary>
		[ImplementPropertyType("completionDate")]
		public DateTime CompletionDate
		{
			get { return this.GetPropertyValue<DateTime>("completionDate"); }
		}

		///<summary>
		/// Custom CSS: Root class is ".campaign"
		///</summary>
		[ImplementPropertyType("customCSS")]
		public string CustomCss
		{
			get { return this.GetPropertyValue<string>("customCSS"); }
		}

		///<summary>
		/// Date Published
		///</summary>
		[ImplementPropertyType("datePublished")]
		public DateTime DatePublished
		{
			get { return this.GetPropertyValue<DateTime>("datePublished"); }
		}

		///<summary>
		/// Facebook Url
		///</summary>
		[ImplementPropertyType("facebookUrl")]
		public string FacebookUrl
		{
			get { return this.GetPropertyValue<string>("facebookUrl"); }
		}

		///<summary>
		/// Full Summary
		///</summary>
		[ImplementPropertyType("fullSummary")]
		public IHtmlString FullSummary
		{
			get { return this.GetPropertyValue<IHtmlString>("fullSummary"); }
		}

		///<summary>
		/// LinkedIn Url
		///</summary>
		[ImplementPropertyType("linkedInUrl")]
		public string LinkedInUrl
		{
			get { return this.GetPropertyValue<string>("linkedInUrl"); }
		}

		///<summary>
		/// Media Folder
		///</summary>
		[ImplementPropertyType("mediaFolder")]
		public string MediaFolder
		{
			get { return this.GetPropertyValue<string>("mediaFolder"); }
		}

		///<summary>
		/// No Fees Applied
		///</summary>
		[ImplementPropertyType("noFeesApplied")]
		public bool NoFeesApplied
		{
			get { return this.GetPropertyValue<bool>("noFeesApplied"); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public string Notes
		{
			get { return this.GetPropertyValue<string>("notes"); }
		}

		///<summary>
		/// Published
		///</summary>
		[ImplementPropertyType("published")]
		public bool Published
		{
			get { return this.GetPropertyValue<bool>("published"); }
		}

		///<summary>
		/// Refresh Token
		///</summary>
		[ImplementPropertyType("refreshToken")]
		public string RefreshToken
		{
			get { return this.GetPropertyValue<string>("refreshToken"); }
		}

		///<summary>
		/// Science
		///</summary>
		[ImplementPropertyType("scienceSubcategory")]
		public object ScienceSubcategory
		{
			get { return this.GetPropertyValue("scienceSubcategory"); }
		}

		///<summary>
		/// Self Help
		///</summary>
		[ImplementPropertyType("selfHelpSubcategory")]
		public object SelfHelpSubcategory
		{
			get { return this.GetPropertyValue("selfHelpSubcategory"); }
		}

		///<summary>
		/// Software
		///</summary>
		[ImplementPropertyType("softwareSubcategory")]
		public object SoftwareSubcategory
		{
			get { return this.GetPropertyValue("softwareSubcategory"); }
		}

		///<summary>
		/// Stripe Client Id: Used to obtain the initial user id
		///</summary>
		[ImplementPropertyType("stripeClientId")]
		public string StripeClientId
		{
			get { return this.GetPropertyValue<string>("stripeClientId"); }
		}

		///<summary>
		/// Stripe Publishable Key
		///</summary>
		[ImplementPropertyType("stripePublishableKey")]
		public string StripePublishableKey
		{
			get { return this.GetPropertyValue<string>("stripePublishableKey"); }
		}

		///<summary>
		/// Stripe User Id: Is the Stripe Connect Account Id.
		///</summary>
		[ImplementPropertyType("stripeUserId")]
		public string StripeUserId
		{
			get { return this.GetPropertyValue<string>("stripeUserId"); }
		}

		///<summary>
		/// Summary Panel Image: The image used on the campaign panel.
		///</summary>
		[ImplementPropertyType("summaryPanelImage")]
		public Newtonsoft.Json.Linq.JToken SummaryPanelImage
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("summaryPanelImage"); }
		}

		///<summary>
		/// Support Email
		///</summary>
		[ImplementPropertyType("supportEmail")]
		public string SupportEmail
		{
			get { return this.GetPropertyValue<string>("supportEmail"); }
		}

		///<summary>
		/// Technology
		///</summary>
		[ImplementPropertyType("technologySubcategory")]
		public object TechnologySubcategory
		{
			get { return this.GetPropertyValue("technologySubcategory"); }
		}

		///<summary>
		/// Top Banner Image: The top banner image used on the campaign page.
		///</summary>
		[ImplementPropertyType("topBannerImage")]
		public Newtonsoft.Json.Linq.JToken TopBannerImage
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("topBannerImage"); }
		}

		///<summary>
		/// Twitter Url
		///</summary>
		[ImplementPropertyType("twitterUrl")]
		public string TwitterUrl
		{
			get { return this.GetPropertyValue<string>("twitterUrl"); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSocialChecker(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}

	/// <summary>Team</summary>
	[PublishedContentModel("Team")]
	public partial class Team : SharedProperties01, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Team";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Team(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Team, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Facebook Url
		///</summary>
		[ImplementPropertyType("facebookUrl")]
		public string FacebookUrl
		{
			get { return this.GetPropertyValue<string>("facebookUrl"); }
		}

		///<summary>
		/// LinkedIn Url
		///</summary>
		[ImplementPropertyType("linkedInUrl")]
		public string LinkedInUrl
		{
			get { return this.GetPropertyValue<string>("linkedInUrl"); }
		}

		///<summary>
		/// Media Folder
		///</summary>
		[ImplementPropertyType("mediaFolder")]
		public string MediaFolder
		{
			get { return this.GetPropertyValue<string>("mediaFolder"); }
		}

		///<summary>
		/// Support Email
		///</summary>
		[ImplementPropertyType("supportEmail")]
		public string SupportEmail
		{
			get { return this.GetPropertyValue<string>("supportEmail"); }
		}

		///<summary>
		/// Team Administrators: This is the campaign's team administrators.
		///</summary>
		[ImplementPropertyType("teamAdministrators")]
		public string TeamAdministrators
		{
			get { return this.GetPropertyValue<string>("teamAdministrators"); }
		}

		///<summary>
		/// Team Image
		///</summary>
		[ImplementPropertyType("teamImage")]
		public object TeamImage
		{
			get { return this.GetPropertyValue("teamImage"); }
		}

		///<summary>
		/// Twitter Url
		///</summary>
		[ImplementPropertyType("twitterUrl")]
		public string TwitterUrl
		{
			get { return this.GetPropertyValue<string>("twitterUrl"); }
		}

		///<summary>
		/// Who Are We
		///</summary>
		[ImplementPropertyType("whoAreWe")]
		public IHtmlString WhoAreWe
		{
			get { return this.GetPropertyValue<IHtmlString>("whoAreWe"); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSocialChecker(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}

	/// <summary>Folders</summary>
	[PublishedContentModel("Folders")]
	public partial class Folders : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folders";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Folders(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folders, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Alpha Folder</summary>
	[PublishedContentModel("AlphaFolder")]
	public partial class AlphaFolder : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "AlphaFolder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AlphaFolder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AlphaFolder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Primary Subject</summary>
	[PublishedContentModel("PrimarySubject")]
	public partial class PrimarySubject : StandardPage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "PrimarySubject";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PrimarySubject(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PrimarySubject, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Category Description: Description used in the menu.
		///</summary>
		[ImplementPropertyType("categoryDescription")]
		public string CategoryDescription
		{
			get { return this.GetPropertyValue<string>("categoryDescription"); }
		}
	}

	/// <summary>Shared Properties 02- Lists</summary>
	[PublishedContentModel("SharedProperties02Lists")]
	public partial class SharedProperties02Lists : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "SharedProperties02Lists";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SharedProperties02Lists(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SharedProperties02Lists, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Campaigns</summary>
	[PublishedContentModel("Campaigns")]
	public partial class Campaigns : SharedProperties02Lists, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Campaigns";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Campaigns(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Campaigns, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSocialChecker(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}

	/// <summary>Generic Doctypes</summary>
	[PublishedContentModel("GenericDoctypes")]
	public partial class GenericDoctypes : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "GenericDoctypes";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GenericDoctypes(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GenericDoctypes, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Corporate Entity</summary>
	[PublishedContentModel("CorporateEntity")]
	public partial class CorporateEntity : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "CorporateEntity";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CorporateEntity(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CorporateEntity, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Corporate Account Holders: This is the owners of this corporate account and all child teams and campaigns.
		///</summary>
		[ImplementPropertyType("corporateAccountHolders")]
		public string CorporateAccountHolders
		{
			get { return this.GetPropertyValue<string>("corporateAccountHolders"); }
		}
	}

	/// <summary>Phases</summary>
	[PublishedContentModel("Phases")]
	public partial class Phases : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Phases";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Phases(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Phases, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Phase</summary>
	[PublishedContentModel("Phase")]
	public partial class Phase : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Phase";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Phase(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Phase, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Activation Date
		///</summary>
		[ImplementPropertyType("activationDate")]
		public DateTime ActivationDate
		{
			get { return this.GetPropertyValue<DateTime>("activationDate"); }
		}

		///<summary>
		/// Completion Date
		///</summary>
		[ImplementPropertyType("completionDate")]
		public DateTime CompletionDate
		{
			get { return this.GetPropertyValue<DateTime>("completionDate"); }
		}

		///<summary>
		/// Failed Date: Date last phase attempt had failed
		///</summary>
		[ImplementPropertyType("failedDate")]
		public DateTime FailedDate
		{
			get { return this.GetPropertyValue<DateTime>("failedDate"); }
		}

		///<summary>
		/// Goal: The monetary goal for this phase.
		///</summary>
		[ImplementPropertyType("goal")]
		public object Goal
		{
			get { return this.GetPropertyValue("goal"); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public string Notes
		{
			get { return this.GetPropertyValue<string>("notes"); }
		}

		///<summary>
		/// Phase Active
		///</summary>
		[ImplementPropertyType("phaseActive")]
		public bool PhaseActive
		{
			get { return this.GetPropertyValue<bool>("phaseActive"); }
		}

		///<summary>
		/// Phase Complete
		///</summary>
		[ImplementPropertyType("phaseComplete")]
		public bool PhaseComplete
		{
			get { return this.GetPropertyValue<bool>("phaseComplete"); }
		}

		///<summary>
		/// Phase Description: Short description about the purpose of this phase.
		///</summary>
		[ImplementPropertyType("phaseDescription")]
		public string PhaseDescription
		{
			get { return this.GetPropertyValue<string>("phaseDescription"); }
		}

		///<summary>
		/// Phase Failed: Selected only when the previous attempt at this phase failed to generate the needed pledges.
		///</summary>
		[ImplementPropertyType("phaseFailed")]
		public bool PhaseFailed
		{
			get { return this.GetPropertyValue<bool>("phaseFailed"); }
		}

		///<summary>
		/// Phase Number
		///</summary>
		[ImplementPropertyType("phaseNumber")]
		public int PhaseNumber
		{
			get { return this.GetPropertyValue<int>("phaseNumber"); }
		}

		///<summary>
		/// Previous Phases: List of all previous phases that are saved in the "Previous Phases" folder.
		///</summary>
		[ImplementPropertyType("previousPhases")]
		public IEnumerable<IPublishedContent> PreviousPhases
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("previousPhases"); }
		}

		///<summary>
		/// Published: Indicates if this phase is published and ready to be used in the campaign.
		///</summary>
		[ImplementPropertyType("published")]
		public bool Published
		{
			get { return this.GetPropertyValue<bool>("published"); }
		}
	}

	/// <summary>Timeline Entry</summary>
	[PublishedContentModel("TimelineEntry")]
	public partial class TimelineEntry : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "TimelineEntry";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public TimelineEntry(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<TimelineEntry, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Entry Date
		///</summary>
		[ImplementPropertyType("entryDate")]
		public DateTime EntryDate
		{
			get { return this.GetPropertyValue<DateTime>("entryDate"); }
		}

		///<summary>
		/// Show On Timeline
		///</summary>
		[ImplementPropertyType("showOnTimeline")]
		public bool ShowOnTimeline
		{
			get { return this.GetPropertyValue<bool>("showOnTimeline"); }
		}

		///<summary>
		/// Summary
		///</summary>
		[ImplementPropertyType("summary")]
		public IHtmlString Summary
		{
			get { return this.GetPropertyValue<IHtmlString>("summary"); }
		}
	}

	/// <summary>Timeline</summary>
	[PublishedContentModel("Timeline")]
	public partial class Timeline : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Timeline";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Timeline(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Timeline, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Media Folder
		///</summary>
		[ImplementPropertyType("mediaFolder")]
		public string MediaFolder
		{
			get { return this.GetPropertyValue<string>("mediaFolder"); }
		}
	}

	/// <summary>Rewards</summary>
	[PublishedContentModel("Rewards")]
	public partial class Rewards : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Rewards";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Rewards(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Rewards, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Media Folder
		///</summary>
		[ImplementPropertyType("mediaFolder")]
		public string MediaFolder
		{
			get { return this.GetPropertyValue<string>("mediaFolder"); }
		}
	}

	/// <summary>Reward</summary>
	[PublishedContentModel("Reward")]
	public partial class Reward : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Reward";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Reward(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Reward, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Available: Quantity of available product
		///</summary>
		[ImplementPropertyType("available")]
		public int Available
		{
			get { return this.GetPropertyValue<int>("available"); }
		}

		///<summary>
		/// Claimed: # of products claimed to date.
		///</summary>
		[ImplementPropertyType("claimed")]
		public int Claimed
		{
			get { return this.GetPropertyValue<int>("claimed"); }
		}

		///<summary>
		/// Contribution Amount
		///</summary>
		[ImplementPropertyType("contributionAmount")]
		public object ContributionAmount
		{
			get { return this.GetPropertyValue("contributionAmount"); }
		}

		///<summary>
		/// Estimated Shipping Month: Estimated month that product will likely be shipped out by,
		///</summary>
		[ImplementPropertyType("estimatedShippingMonth")]
		public object EstimatedShippingMonth
		{
			get { return this.GetPropertyValue("estimatedShippingMonth"); }
		}

		///<summary>
		/// Estimated Shipping Year: Estimated year that product will be shipped.
		///</summary>
		[ImplementPropertyType("estimatedShippingYear")]
		public object EstimatedShippingYear
		{
			get { return this.GetPropertyValue("estimatedShippingYear"); }
		}

		///<summary>
		/// Featured Image
		///</summary>
		[ImplementPropertyType("featuredImage")]
		public Newtonsoft.Json.Linq.JToken FeaturedImage
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("featuredImage"); }
		}

		///<summary>
		/// Short Description
		///</summary>
		[ImplementPropertyType("shortDescription")]
		public string ShortDescription
		{
			get { return this.GetPropertyValue<string>("shortDescription"); }
		}

		///<summary>
		/// Show On Timeline
		///</summary>
		[ImplementPropertyType("showOnTimeline")]
		public bool ShowOnTimeline
		{
			get { return this.GetPropertyValue<bool>("showOnTimeline"); }
		}
	}

	/// <summary>Checkout</summary>
	[PublishedContentModel("Checkout")]
	public partial class Checkout : SharedProperties01
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Checkout";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Checkout(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Checkout, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>FAQs</summary>
	[PublishedContentModel("faqs")]
	public partial class Faqs : SharedProperties02Lists, ISharedProperties01
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "faqs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Faqs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Faqs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>FAQ</summary>
	[PublishedContentModel("fAQ")]
	public partial class FAQ : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "fAQ";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FAQ(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FAQ, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Answer
		///</summary>
		[ImplementPropertyType("answer")]
		public IHtmlString Answer
		{
			get { return this.GetPropertyValue<IHtmlString>("answer"); }
		}

		///<summary>
		/// Question
		///</summary>
		[ImplementPropertyType("question")]
		public string Question
		{
			get { return this.GetPropertyValue<string>("question"); }
		}
	}

	/// <summary>Edit Campaign</summary>
	[PublishedContentModel("editCampaign")]
	public partial class EditCampaign : SharedProperties01
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "editCampaign";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EditCampaign(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EditCampaign, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Completion Content: This will only be used on the wizard page.
		///</summary>
		[ImplementPropertyType("completionContent")]
		public IHtmlString CompletionContent
		{
			get { return this.GetPropertyValue<IHtmlString>("completionContent"); }
		}

		///<summary>
		/// Introduction Content: This will only be used on the wizard page.
		///</summary>
		[ImplementPropertyType("introductionContent")]
		public IHtmlString IntroductionContent
		{
			get { return this.GetPropertyValue<IHtmlString>("introductionContent"); }
		}
	}

	/// <summary>Campaign Members</summary>
	[PublishedContentModel("campaignMembers")]
	public partial class CampaignMembers : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "campaignMembers";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CampaignMembers(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CampaignMembers, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Campaign Member</summary>
	[PublishedContentModel("campaignMember")]
	public partial class CampaignMember : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "campaignMember";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CampaignMember(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CampaignMember, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Campaign Manager
		///</summary>
		[ImplementPropertyType("campaignManager")]
		public bool CampaignManager
		{
			get { return this.GetPropertyValue<bool>("campaignManager"); }
		}

		/*
		 * THIS PROPERTY CANNOT BE IMPLEMENTED, BECAUSE:
		 *
		 * The class CampaignMember cannot implement this property,
		 * because CSharp does not support naming the property
		 * with alias "campaignMember" with the same name as content
		 * type with alias "campaignMember". Consider using an
		 * attribute to assign a different name to the property.
		 *

		///<summary>
		/// Campaign Member
		///</summary>
		[ImplementPropertyType("campaignMember")]
		public object CampaignMember
		{
			get { return this.GetPropertyValue("campaignMember"); }
		}

		 *
		 */

		///<summary>
		/// Role Description
		///</summary>
		[ImplementPropertyType("roleDescription")]
		public string RoleDescription
		{
			get { return this.GetPropertyValue<string>("roleDescription"); }
		}
	}

	/// <summary>Edit Account</summary>
	[PublishedContentModel("editAccount")]
	public partial class EditAccount : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "editAccount";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public EditAccount(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<EditAccount, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Pledge</summary>
	[PublishedContentModel("pledge")]
	public partial class Pledge : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pledge";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Pledge(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Pledge, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Balance Transaction Id
		///</summary>
		[ImplementPropertyType("balanceTransactionId")]
		public string BalanceTransactionId
		{
			get { return this.GetPropertyValue<string>("balanceTransactionId"); }
		}

		///<summary>
		/// Campaign Mngr Notes
		///</summary>
		[ImplementPropertyType("campaignMngrNotes")]
		public string CampaignMngrNotes
		{
			get { return this.GetPropertyValue<string>("campaignMngrNotes"); }
		}

		///<summary>
		/// Canceled
		///</summary>
		[ImplementPropertyType("canceled")]
		public bool Canceled
		{
			get { return this.GetPropertyValue<bool>("canceled"); }
		}

		///<summary>
		/// Charge Id
		///</summary>
		[ImplementPropertyType("chargeId")]
		public string ChargeId
		{
			get { return this.GetPropertyValue<string>("chargeId"); }
		}

		///<summary>
		/// Charge Status
		///</summary>
		[ImplementPropertyType("chargeStatus")]
		public string ChargeStatus
		{
			get { return this.GetPropertyValue<string>("chargeStatus"); }
		}

		///<summary>
		/// Customer Id
		///</summary>
		[ImplementPropertyType("customerId")]
		public string CustomerId
		{
			get { return this.GetPropertyValue<string>("customerId"); }
		}

		///<summary>
		/// Date Canceled
		///</summary>
		[ImplementPropertyType("dateCanceled")]
		public DateTime DateCanceled
		{
			get { return this.GetPropertyValue<DateTime>("dateCanceled"); }
		}

		///<summary>
		/// Date Declined
		///</summary>
		[ImplementPropertyType("dateDeclined")]
		public DateTime DateDeclined
		{
			get { return this.GetPropertyValue<DateTime>("dateDeclined"); }
		}

		///<summary>
		/// Date to Process
		///</summary>
		[ImplementPropertyType("dateToProcess")]
		public DateTime DateToProcess
		{
			get { return this.GetPropertyValue<DateTime>("dateToProcess"); }
		}

		///<summary>
		/// Destination Id
		///</summary>
		[ImplementPropertyType("destinationId")]
		public string DestinationId
		{
			get { return this.GetPropertyValue<string>("destinationId"); }
		}

		///<summary>
		/// Fulfilled
		///</summary>
		[ImplementPropertyType("fulfilled")]
		public bool Fulfilled
		{
			get { return this.GetPropertyValue<bool>("fulfilled"); }
		}

		///<summary>
		/// Fulfillment Date
		///</summary>
		[ImplementPropertyType("fulfillmentDate")]
		public DateTime FulfillmentDate
		{
			get { return this.GetPropertyValue<DateTime>("fulfillmentDate"); }
		}

		///<summary>
		/// MWoO Fees
		///</summary>
		[ImplementPropertyType("mWoOFees")]
		public object MWoOfees
		{
			get { return this.GetPropertyValue("mWoOFees"); }
		}

		///<summary>
		/// Net Pledge Amount
		///</summary>
		[ImplementPropertyType("netPledgeAmount")]
		public object NetPledgeAmount
		{
			get { return this.GetPropertyValue("netPledgeAmount"); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public string Notes
		{
			get { return this.GetPropertyValue<string>("notes"); }
		}

		///<summary>
		/// Pledge Amount
		///</summary>
		[ImplementPropertyType("pledgeAmount")]
		public object PledgeAmount
		{
			get { return this.GetPropertyValue("pledgeAmount"); }
		}

		///<summary>
		/// Pledge Date: When the pledge was submitted to Stripe.  ( Note: this time is based in Europe.)
		///</summary>
		[ImplementPropertyType("pledgeDate")]
		public DateTime PledgeDate
		{
			get { return this.GetPropertyValue<DateTime>("pledgeDate"); }
		}

		///<summary>
		/// Pledging Member: Id of the member who has pledged to support this campaign
		///</summary>
		[ImplementPropertyType("pledgingMember")]
		public object PledgingMember
		{
			get { return this.GetPropertyValue("pledgingMember"); }
		}

		///<summary>
		/// Reimbursed
		///</summary>
		[ImplementPropertyType("reimbursed")]
		public bool Reimbursed
		{
			get { return this.GetPropertyValue<bool>("reimbursed"); }
		}

		///<summary>
		/// Date Reimbursed
		///</summary>
		[ImplementPropertyType("reimbursedDate")]
		public DateTime ReimbursedDate
		{
			get { return this.GetPropertyValue<DateTime>("reimbursedDate"); }
		}

		///<summary>
		/// Reward Selected
		///</summary>
		[ImplementPropertyType("rewardSelected")]
		public object RewardSelected
		{
			get { return this.GetPropertyValue("rewardSelected"); }
		}

		///<summary>
		/// Reward Shipped
		///</summary>
		[ImplementPropertyType("rewardShipped")]
		public bool RewardShipped
		{
			get { return this.GetPropertyValue<bool>("rewardShipped"); }
		}

		///<summary>
		/// Show As Anonymous
		///</summary>
		[ImplementPropertyType("showAsAnonymous")]
		public bool ShowAsAnonymous
		{
			get { return this.GetPropertyValue<bool>("showAsAnonymous"); }
		}

		///<summary>
		/// Stripe Fees
		///</summary>
		[ImplementPropertyType("stripeFees")]
		public object StripeFees
		{
			get { return this.GetPropertyValue("stripeFees"); }
		}

		///<summary>
		/// Tracking No
		///</summary>
		[ImplementPropertyType("trackingNo")]
		public string TrackingNo
		{
			get { return this.GetPropertyValue<string>("trackingNo"); }
		}

		///<summary>
		/// Transaction Declined
		///</summary>
		[ImplementPropertyType("transactionDeclined")]
		public bool TransactionDeclined
		{
			get { return this.GetPropertyValue<bool>("transactionDeclined"); }
		}

		///<summary>
		/// Transfer Date
		///</summary>
		[ImplementPropertyType("transferDate")]
		public DateTime TransferDate
		{
			get { return this.GetPropertyValue<DateTime>("transferDate"); }
		}

		///<summary>
		/// Transfered: Indicates that the funds have been transfered to the campaign holder's bank account
		///</summary>
		[ImplementPropertyType("transfered")]
		public bool Transfered
		{
			get { return this.GetPropertyValue<bool>("transfered"); }
		}

		///<summary>
		/// Transfer Group
		///</summary>
		[ImplementPropertyType("transferGroup")]
		public string TransferGroup
		{
			get { return this.GetPropertyValue<string>("transferGroup"); }
		}

		///<summary>
		/// Transfer Id
		///</summary>
		[ImplementPropertyType("transferId")]
		public string TransferId
		{
			get { return this.GetPropertyValue<string>("transferId"); }
		}
	}

	/// <summary>Financial Management</summary>
	[PublishedContentModel("financialManagement")]
	public partial class FinancialManagement : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "financialManagement";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FinancialManagement(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FinancialManagement, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Error Message
		///</summary>
		[ImplementPropertyType("errorMessage")]
		public string ErrorMessage
		{
			get { return this.GetPropertyValue<string>("errorMessage"); }
		}

		///<summary>
		/// Read-only Message: Displays when a stripe connect account has been successfully created.
		///</summary>
		[ImplementPropertyType("readOnlyMessage")]
		public IHtmlString ReadOnlyMessage
		{
			get { return this.GetPropertyValue<IHtmlString>("readOnlyMessage"); }
		}

		///<summary>
		/// Success Message
		///</summary>
		[ImplementPropertyType("successMessage")]
		public string SuccessMessage
		{
			get { return this.GetPropertyValue<string>("successMessage"); }
		}
	}

	/// <summary>Creditcard Management</summary>
	[PublishedContentModel("creditcardManagement")]
	public partial class CreditcardManagement : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "creditcardManagement";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CreditcardManagement(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CreditcardManagement, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Errors</summary>
	[PublishedContentModel("errors")]
	public partial class Errors : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "errors";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Errors(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Errors, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Error Message</summary>
	[PublishedContentModel("errorMessage")]
	public partial class ErrorMessage : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "errorMessage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ErrorMessage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ErrorMessage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Administrator Notes
		///</summary>
		[ImplementPropertyType("administratorNotes")]
		public string AdministratorNotes
		{
			get { return this.GetPropertyValue<string>("administratorNotes"); }
		}

		///<summary>
		/// Exception Message
		///</summary>
		[ImplementPropertyType("exceptionMessage")]
		public string ExceptionMessage
		{
			get { return this.GetPropertyValue<string>("exceptionMessage"); }
		}

		///<summary>
		/// General Message
		///</summary>
		[ImplementPropertyType("generalMessage")]
		public string GeneralMessage
		{
			get { return this.GetPropertyValue<string>("generalMessage"); }
		}

		///<summary>
		/// Member
		///</summary>
		[ImplementPropertyType("member")]
		public object Member
		{
			get { return this.GetPropertyValue("member"); }
		}
	}

	/// <summary>Corrected</summary>
	[PublishedContentModel("corrected")]
	public partial class Corrected : ErrorMessage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "corrected";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Corrected(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Corrected, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>To Address</summary>
	[PublishedContentModel("toAddress")]
	public partial class ToAddress : ErrorMessage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "toAddress";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ToAddress(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ToAddress, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Ignore</summary>
	[PublishedContentModel("ignore")]
	public partial class Ignore : ErrorMessage
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "ignore";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Ignore(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Ignore, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Login</summary>
	[PublishedContentModel("login")]
	public partial class Login : GenericDoctypes, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "login";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Login(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Login, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSocialChecker(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}

	/// <summary>Pre-Account Members</summary>
	[PublishedContentModel("preAccountMembers")]
	public partial class PreAccountMembers : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "preAccountMembers";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PreAccountMembers(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PreAccountMembers, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Pre-Account Member</summary>
	[PublishedContentModel("preAccountMember")]
	public partial class PreAccountMember : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "preAccountMember";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PreAccountMember(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PreAccountMember, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Date of Birth
		///</summary>
		[ImplementPropertyType("dateOfBirth")]
		public DateTime DateOfBirth
		{
			get { return this.GetPropertyValue<DateTime>("dateOfBirth"); }
		}

		///<summary>
		/// Email
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return this.GetPropertyValue<string>("email"); }
		}

		///<summary>
		/// First Name
		///</summary>
		[ImplementPropertyType("firstName")]
		public string FirstName
		{
			get { return this.GetPropertyValue<string>("firstName"); }
		}

		///<summary>
		/// Last Name
		///</summary>
		[ImplementPropertyType("lastName")]
		public string LastName
		{
			get { return this.GetPropertyValue<string>("lastName"); }
		}

		///<summary>
		/// Password
		///</summary>
		[ImplementPropertyType("password")]
		public string Password
		{
			get { return this.GetPropertyValue<string>("password"); }
		}

		///<summary>
		/// Resend Authentication Email
		///</summary>
		[ImplementPropertyType("resendAuthenticationEmail")]
		public Newtonsoft.Json.Linq.JToken ResendAuthenticationEmail
		{
			get { return this.GetPropertyValue<Newtonsoft.Json.Linq.JToken>("resendAuthenticationEmail"); }
		}
	}

	/// <summary>Contact Us</summary>
	[PublishedContentModel("contactUs")]
	public partial class ContactUs : GenericDoctypes, INavigation, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "contactUs";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ContactUs(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ContactUs, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Show In Footer: Select if this page is to appear in the footer navigation.
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInFooter(this); }
		}

		///<summary>
		/// Show In Navigation: Select if this page is to appear in the main navigation menu.  This option requires that the parent page is also selected to appear in the main navigation.
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInNavigation(this); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSocialChecker(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}

	/// <summary>Client Messages</summary>
	[PublishedContentModel("clientMessages")]
	public partial class ClientMessages : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "clientMessages";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public ClientMessages(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<ClientMessages, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Message</summary>
	[PublishedContentModel("messageItem")]
	public partial class MessageItem : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "messageItem";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public MessageItem(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<MessageItem, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Added Date
		///</summary>
		[ImplementPropertyType("addedDate")]
		public DateTime AddedDate
		{
			get { return this.GetPropertyValue<DateTime>("addedDate"); }
		}

		///<summary>
		/// Administrative Notes
		///</summary>
		[ImplementPropertyType("administrativeNotes")]
		public string AdministrativeNotes
		{
			get { return this.GetPropertyValue<string>("administrativeNotes"); }
		}

		///<summary>
		/// Email
		///</summary>
		[ImplementPropertyType("email")]
		public string Email
		{
			get { return this.GetPropertyValue<string>("email"); }
		}

		///<summary>
		/// Message
		///</summary>
		[ImplementPropertyType("message")]
		public string Message
		{
			get { return this.GetPropertyValue<string>("message"); }
		}

		///<summary>
		/// Person Name
		///</summary>
		[ImplementPropertyType("personname")]
		public string Personname
		{
			get { return this.GetPropertyValue<string>("personname"); }
		}

		///<summary>
		/// Phone Number
		///</summary>
		[ImplementPropertyType("phoneNumber")]
		public string PhoneNumber
		{
			get { return this.GetPropertyValue<string>("phoneNumber"); }
		}

		///<summary>
		/// Subject
		///</summary>
		[ImplementPropertyType("subject")]
		public string Subject
		{
			get { return this.GetPropertyValue<string>("subject"); }
		}
	}

	/// <summary>Discovery</summary>
	[PublishedContentModel("discovery")]
	public partial class Discovery : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "discovery";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Discovery(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Discovery, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Activation Date
		///</summary>
		[ImplementPropertyType("activationDate")]
		public DateTime ActivationDate
		{
			get { return this.GetPropertyValue<DateTime>("activationDate"); }
		}

		///<summary>
		/// Completion Date
		///</summary>
		[ImplementPropertyType("completionDate")]
		public DateTime CompletionDate
		{
			get { return this.GetPropertyValue<DateTime>("completionDate"); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public string Notes
		{
			get { return this.GetPropertyValue<string>("notes"); }
		}

		///<summary>
		/// Phase Active
		///</summary>
		[ImplementPropertyType("phaseActive")]
		public bool PhaseActive
		{
			get { return this.GetPropertyValue<bool>("phaseActive"); }
		}
	}

	/// <summary>Review</summary>
	[PublishedContentModel("review")]
	public partial class Review : GenericDoctypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "review";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Review(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Review, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Keep Informed
		///</summary>
		[ImplementPropertyType("keepInformed")]
		public bool KeepInformed
		{
			get { return this.GetPropertyValue<bool>("keepInformed"); }
		}

		///<summary>
		/// Member
		///</summary>
		[ImplementPropertyType("member")]
		public object Member
		{
			get { return this.GetPropertyValue("member"); }
		}

		///<summary>
		/// Message
		///</summary>
		[ImplementPropertyType("message")]
		public string Message
		{
			get { return this.GetPropertyValue<string>("message"); }
		}

		///<summary>
		/// Stars: 0-5 Stars
		///</summary>
		[ImplementPropertyType("stars")]
		public int Stars
		{
			get { return this.GetPropertyValue<int>("stars"); }
		}
	}

	/// <summary>Compiled Page</summary>
	[PublishedContentModel("compiledPage")]
	public partial class CompiledPage : PublishedContentModel, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "compiledPage";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public CompiledPage(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<CompiledPage, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Description: Description used in the main menu.
		///</summary>
		[ImplementPropertyType("description")]
		public string Description
		{
			get { return this.GetPropertyValue<string>("description"); }
		}

		///<summary>
		/// Show In Footer: Select if this page is to appear in the footer navigation.  Note that the sub-pages will appear as child links.
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return this.GetPropertyValue<bool>("showInFooter"); }
		}

		///<summary>
		/// Show In Navigation: Select if this page is to appear in the main navigation menu.
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return this.GetPropertyValue<bool>("showInNavigation"); }
		}

		///<summary>
		/// Title: This will be the page's H1 tag.
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetMetaRobots(this); }
		}

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetRedirects(this); }
		}

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSEochecker(this); }
		}

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetSocialChecker(this); }
		}

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return Umbraco.Web.PublishedContentModels.SEO.GetXMlsitemap(this); }
		}
	}

	/// <summary>Segment</summary>
	[PublishedContentModel("segment")]
	public partial class Segment : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "segment";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Segment(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Segment, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Content
		///</summary>
		[ImplementPropertyType("content")]
		public IHtmlString Content
		{
			get { return this.GetPropertyValue<IHtmlString>("content"); }
		}

		///<summary>
		/// Heading: This will be the H2 tag.  An anchor tag will also be generated by this.
		///</summary>
		[ImplementPropertyType("heading")]
		public string Heading
		{
			get { return this.GetPropertyValue<string>("heading"); }
		}

		///<summary>
		/// Show On Side
		///</summary>
		[ImplementPropertyType("showOnSide")]
		public bool ShowOnSide
		{
			get { return this.GetPropertyValue<bool>("showOnSide"); }
		}

		///<summary>
		/// Show In Footer: Select if this page is to appear in the footer navigation.
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInFooter(this); }
		}

		///<summary>
		/// Show In Navigation: Select if this page is to appear in the main navigation menu.  This option requires that the parent page is also selected to appear in the main navigation.
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInNavigation(this); }
		}
	}

	/// <summary>Data Layer</summary>
	[PublishedContentModel("dataLayer")]
	public partial class DataLayer : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "dataLayer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public DataLayer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<DataLayer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Previous Phases</summary>
	[PublishedContentModel("previousPhases")]
	public partial class PreviousPhases : Folders
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "previousPhases";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PreviousPhases(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PreviousPhases, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	// Mixin content Type 7655 with alias "navigation"
	/// <summary>Navigation</summary>
	public partial interface INavigation : IPublishedContent
	{
		/// <summary>Show In Footer</summary>
		bool ShowInFooter { get; }

		/// <summary>Show In Navigation</summary>
		bool ShowInNavigation { get; }
	}

	/// <summary>Navigation</summary>
	[PublishedContentModel("navigation")]
	public partial class Navigation : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigation";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Navigation(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Navigation, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Show In Footer: Select if this page is to appear in the footer navigation.
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return GetShowInFooter(this); }
		}

		/// <summary>Static getter for Show In Footer</summary>
		public static bool GetShowInFooter(INavigation that) { return that.GetPropertyValue<bool>("showInFooter"); }

		///<summary>
		/// Show In Navigation: Select if this page is to appear in the main navigation menu.  This option requires that the parent page is also selected to appear in the main navigation.
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return GetShowInNavigation(this); }
		}

		/// <summary>Static getter for Show In Navigation</summary>
		public static bool GetShowInNavigation(INavigation that) { return that.GetPropertyValue<bool>("showInNavigation"); }
	}

	/// <summary>Navigation Link</summary>
	[PublishedContentModel("navigationLink")]
	public partial class NavigationLink : PublishedContentModel, INavigation
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "navigationLink";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public NavigationLink(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<NavigationLink, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Navigate To
		///</summary>
		[ImplementPropertyType("navigateTo")]
		public IPublishedContent NavigateTo
		{
			get { return this.GetPropertyValue<IPublishedContent>("navigateTo"); }
		}

		///<summary>
		/// Title
		///</summary>
		[ImplementPropertyType("title")]
		public string Title
		{
			get { return this.GetPropertyValue<string>("title"); }
		}

		///<summary>
		/// Show In Footer: Select if this page is to appear in the footer navigation.
		///</summary>
		[ImplementPropertyType("showInFooter")]
		public bool ShowInFooter
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInFooter(this); }
		}

		///<summary>
		/// Show In Navigation: Select if this page is to appear in the main navigation menu.  This option requires that the parent page is also selected to appear in the main navigation.
		///</summary>
		[ImplementPropertyType("showInNavigation")]
		public bool ShowInNavigation
		{
			get { return Umbraco.Web.PublishedContentModels.Navigation.GetShowInNavigation(this); }
		}
	}

	/// <summary>Payouts</summary>
	[PublishedContentModel("payouts")]
	public partial class Payouts : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "payouts";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Payouts(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Payouts, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Payout Types</summary>
	[PublishedContentModel("payoutTypes")]
	public partial class PayoutTypes : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "payoutTypes";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PayoutTypes(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PayoutTypes, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Successful Payouts</summary>
	[PublishedContentModel("successfulPayouts")]
	public partial class SuccessfulPayouts : PayoutTypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "successfulPayouts";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SuccessfulPayouts(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SuccessfulPayouts, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Failed Payouts</summary>
	[PublishedContentModel("failedPayouts")]
	public partial class FailedPayouts : PayoutTypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "failedPayouts";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public FailedPayouts(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<FailedPayouts, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Pending Payouts</summary>
	[PublishedContentModel("pendingPayouts")]
	public partial class PendingPayouts : PayoutTypes
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "pendingPayouts";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PendingPayouts(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PendingPayouts, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Payout</summary>
	[PublishedContentModel("payout")]
	public partial class Payout : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "payout";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Payout(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Payout, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Active Phase
		///</summary>
		[ImplementPropertyType("activePhase")]
		public object ActivePhase
		{
			get { return this.GetPropertyValue("activePhase"); }
		}

		///<summary>
		/// Campaign
		///</summary>
		[ImplementPropertyType("campaign")]
		public object Campaign
		{
			get { return this.GetPropertyValue("campaign"); }
		}

		///<summary>
		/// Date to Process
		///</summary>
		[ImplementPropertyType("dateToProcess")]
		public DateTime DateToProcess
		{
			get { return this.GetPropertyValue<DateTime>("dateToProcess"); }
		}

		///<summary>
		/// Is Complete
		///</summary>
		[ImplementPropertyType("isComplete")]
		public bool IsComplete
		{
			get { return this.GetPropertyValue<bool>("isComplete"); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public string Notes
		{
			get { return this.GetPropertyValue<string>("notes"); }
		}

		///<summary>
		/// Payout Total
		///</summary>
		[ImplementPropertyType("payoutTotal")]
		public int PayoutTotal
		{
			get { return this.GetPropertyValue<int>("payoutTotal"); }
		}
	}

	// Mixin content Type 15441 with alias "webhookContent"
	/// <summary>Webhook Content</summary>
	public partial interface IWebhookContent : IPublishedContent
	{
		/// <summary>Administrator Notes</summary>
		IHtmlString AdministratorNotes { get; }

		/// <summary>Associated To</summary>
		object AssociatedTo { get; }

		/// <summary>Hook Message</summary>
		string HookMessage { get; }

		/// <summary>Received On</summary>
		DateTime ReceivedOn { get; }
	}

	/// <summary>Webhook Content</summary>
	[PublishedContentModel("webhookContent")]
	public partial class WebhookContent : PublishedContentModel, IWebhookContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "webhookContent";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public WebhookContent(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<WebhookContent, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Administrator Notes
		///</summary>
		[ImplementPropertyType("administratorNotes")]
		public IHtmlString AdministratorNotes
		{
			get { return GetAdministratorNotes(this); }
		}

		/// <summary>Static getter for Administrator Notes</summary>
		public static IHtmlString GetAdministratorNotes(IWebhookContent that) { return that.GetPropertyValue<IHtmlString>("administratorNotes"); }

		///<summary>
		/// Associated To: Node that this message is associated to.
		///</summary>
		[ImplementPropertyType("associatedTo")]
		public object AssociatedTo
		{
			get { return GetAssociatedTo(this); }
		}

		/// <summary>Static getter for Associated To</summary>
		public static object GetAssociatedTo(IWebhookContent that) { return that.GetPropertyValue("associatedTo"); }

		///<summary>
		/// Hook Message: Message received from Stripe
		///</summary>
		[ImplementPropertyType("hookMessage")]
		public string HookMessage
		{
			get { return GetHookMessage(this); }
		}

		/// <summary>Static getter for Hook Message</summary>
		public static string GetHookMessage(IWebhookContent that) { return that.GetPropertyValue<string>("hookMessage"); }

		///<summary>
		/// Received On: Date/Time that the message was received
		///</summary>
		[ImplementPropertyType("receivedOn")]
		public DateTime ReceivedOn
		{
			get { return GetReceivedOn(this); }
		}

		/// <summary>Static getter for Received On</summary>
		public static DateTime GetReceivedOn(IWebhookContent that) { return that.GetPropertyValue<DateTime>("receivedOn"); }
	}

	/// <summary>Webhooks</summary>
	[PublishedContentModel("webhooks")]
	public partial class Webhooks : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "webhooks";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Webhooks(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Webhooks, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Account Hooks</summary>
	[PublishedContentModel("accountHooks")]
	public partial class AccountHooks : Webhooks
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "accountHooks";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public AccountHooks(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<AccountHooks, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Charges</summary>
	[PublishedContentModel("charges")]
	public partial class Charges : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "charges";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Charges(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Charges, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Charge</summary>
	[PublishedContentModel("charge")]
	public partial class Charge : Charges, IWebhookContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "charge";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Charge(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Charge, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Administrator Notes
		///</summary>
		[ImplementPropertyType("administratorNotes")]
		public IHtmlString AdministratorNotes
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAdministratorNotes(this); }
		}

		///<summary>
		/// Associated To: Node that this message is associated to.
		///</summary>
		[ImplementPropertyType("associatedTo")]
		public object AssociatedTo
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAssociatedTo(this); }
		}

		///<summary>
		/// Hook Message: Message received from Stripe
		///</summary>
		[ImplementPropertyType("hookMessage")]
		public string HookMessage
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetHookMessage(this); }
		}

		///<summary>
		/// Received On: Date/Time that the message was received
		///</summary>
		[ImplementPropertyType("receivedOn")]
		public DateTime ReceivedOn
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetReceivedOn(this); }
		}
	}

	/// <summary>Generic Hooks</summary>
	[PublishedContentModel("genericHooks")]
	public partial class GenericHooks : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "genericHooks";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GenericHooks(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GenericHooks, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Generic Hook</summary>
	[PublishedContentModel("genericHook")]
	public partial class GenericHook : GenericHooks, IWebhookContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "genericHook";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public GenericHook(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<GenericHook, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Administrator Notes
		///</summary>
		[ImplementPropertyType("administratorNotes")]
		public IHtmlString AdministratorNotes
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAdministratorNotes(this); }
		}

		///<summary>
		/// Associated To: Node that this message is associated to.
		///</summary>
		[ImplementPropertyType("associatedTo")]
		public object AssociatedTo
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAssociatedTo(this); }
		}

		///<summary>
		/// Hook Message: Message received from Stripe
		///</summary>
		[ImplementPropertyType("hookMessage")]
		public string HookMessage
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetHookMessage(this); }
		}

		///<summary>
		/// Received On: Date/Time that the message was received
		///</summary>
		[ImplementPropertyType("receivedOn")]
		public DateTime ReceivedOn
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetReceivedOn(this); }
		}
	}

	/// <summary>Payouts</summary>
	[PublishedContentModel("payoutHooks")]
	public partial class PayoutHooks : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "payoutHooks";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PayoutHooks(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PayoutHooks, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Payout</summary>
	[PublishedContentModel("payoutHook")]
	public partial class PayoutHook : PayoutHooks, IWebhookContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "payoutHook";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public PayoutHook(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<PayoutHook, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Administrator Notes
		///</summary>
		[ImplementPropertyType("administratorNotes")]
		public IHtmlString AdministratorNotes
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAdministratorNotes(this); }
		}

		///<summary>
		/// Associated To: Node that this message is associated to.
		///</summary>
		[ImplementPropertyType("associatedTo")]
		public object AssociatedTo
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAssociatedTo(this); }
		}

		///<summary>
		/// Hook Message: Message received from Stripe
		///</summary>
		[ImplementPropertyType("hookMessage")]
		public string HookMessage
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetHookMessage(this); }
		}

		///<summary>
		/// Received On: Date/Time that the message was received
		///</summary>
		[ImplementPropertyType("receivedOn")]
		public DateTime ReceivedOn
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetReceivedOn(this); }
		}
	}

	/// <summary>Transfers</summary>
	[PublishedContentModel("transfers")]
	public partial class Transfers : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "transfers";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Transfers(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Transfers, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}
	}

	/// <summary>Transfer</summary>
	[PublishedContentModel("transfer")]
	public partial class Transfer : Transfers, IWebhookContent
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "transfer";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public Transfer(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Transfer, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Administrator Notes
		///</summary>
		[ImplementPropertyType("administratorNotes")]
		public IHtmlString AdministratorNotes
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAdministratorNotes(this); }
		}

		///<summary>
		/// Associated To: Node that this message is associated to.
		///</summary>
		[ImplementPropertyType("associatedTo")]
		public object AssociatedTo
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetAssociatedTo(this); }
		}

		///<summary>
		/// Hook Message: Message received from Stripe
		///</summary>
		[ImplementPropertyType("hookMessage")]
		public string HookMessage
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetHookMessage(this); }
		}

		///<summary>
		/// Received On: Date/Time that the message was received
		///</summary>
		[ImplementPropertyType("receivedOn")]
		public DateTime ReceivedOn
		{
			get { return Umbraco.Web.PublishedContentModels.WebhookContent.GetReceivedOn(this); }
		}
	}

	// Mixin content Type 15517 with alias "sEO"
	/// <summary>SEO</summary>
	public partial interface ISEO : IPublishedContent
	{
		/// <summary>Meta Robots</summary>
		object MetaRobots { get; }

		/// <summary>Redirects</summary>
		object Redirects { get; }

		/// <summary>SEO Checker</summary>
		SEOChecker.MVC.MetaData SEochecker { get; }

		/// <summary>Social Checker</summary>
		string SocialChecker { get; }

		/// <summary>XMLSitemap</summary>
		object XMlsitemap { get; }
	}

	/// <summary>SEO</summary>
	[PublishedContentModel("sEO")]
	public partial class SEO : PublishedContentModel, ISEO
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "sEO";
		public new const PublishedItemType ModelItemType = PublishedItemType.Content;
#pragma warning restore 0109

		public SEO(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<SEO, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Meta Robots
		///</summary>
		[ImplementPropertyType("metaRobots")]
		public object MetaRobots
		{
			get { return GetMetaRobots(this); }
		}

		/// <summary>Static getter for Meta Robots</summary>
		public static object GetMetaRobots(ISEO that) { return that.GetPropertyValue("metaRobots"); }

		///<summary>
		/// Redirects
		///</summary>
		[ImplementPropertyType("redirects")]
		public object Redirects
		{
			get { return GetRedirects(this); }
		}

		/// <summary>Static getter for Redirects</summary>
		public static object GetRedirects(ISEO that) { return that.GetPropertyValue("redirects"); }

		///<summary>
		/// SEO Checker
		///</summary>
		[ImplementPropertyType("sEOChecker")]
		public SEOChecker.MVC.MetaData SEochecker
		{
			get { return GetSEochecker(this); }
		}

		/// <summary>Static getter for SEO Checker</summary>
		public static SEOChecker.MVC.MetaData GetSEochecker(ISEO that) { return that.GetPropertyValue<SEOChecker.MVC.MetaData>("sEOChecker"); }

		///<summary>
		/// Social Checker
		///</summary>
		[ImplementPropertyType("socialChecker")]
		public string SocialChecker
		{
			get { return GetSocialChecker(this); }
		}

		/// <summary>Static getter for Social Checker</summary>
		public static string GetSocialChecker(ISEO that) { return that.GetPropertyValue<string>("socialChecker"); }

		///<summary>
		/// XMLSitemap
		///</summary>
		[ImplementPropertyType("xMLSitemap")]
		public object XMlsitemap
		{
			get { return GetXMlsitemap(this); }
		}

		/// <summary>Static getter for XMLSitemap</summary>
		public static object GetXMlsitemap(ISEO that) { return that.GetPropertyValue("xMLSitemap"); }
	}

	/// <summary>Folder</summary>
	[PublishedContentModel("Folder")]
	public partial class Folder : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Folder";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Folder(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Folder, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Contents:
		///</summary>
		[ImplementPropertyType("contents")]
		public object Contents
		{
			get { return this.GetPropertyValue("contents"); }
		}
	}

	/// <summary>Image</summary>
	[PublishedContentModel("Image")]
	public partial class Image : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Image";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public Image(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Image, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Crop Image
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public Umbraco.Web.Models.ImageCropDataSet UmbracoFile
		{
			get { return this.GetPropertyValue<Umbraco.Web.Models.ImageCropDataSet>("umbracoFile"); }
		}

		///<summary>
		/// Height
		///</summary>
		[ImplementPropertyType("umbracoHeight")]
		public string UmbracoHeight
		{
			get { return this.GetPropertyValue<string>("umbracoHeight"); }
		}

		///<summary>
		/// Width
		///</summary>
		[ImplementPropertyType("umbracoWidth")]
		public string UmbracoWidth
		{
			get { return this.GetPropertyValue<string>("umbracoWidth"); }
		}
	}

	/// <summary>File</summary>
	[PublishedContentModel("File")]
	public partial class File : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "File";
		public new const PublishedItemType ModelItemType = PublishedItemType.Media;
#pragma warning restore 0109

		public File(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<File, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Size
		///</summary>
		[ImplementPropertyType("umbracoBytes")]
		public string UmbracoBytes
		{
			get { return this.GetPropertyValue<string>("umbracoBytes"); }
		}

		///<summary>
		/// Type
		///</summary>
		[ImplementPropertyType("umbracoExtension")]
		public string UmbracoExtension
		{
			get { return this.GetPropertyValue<string>("umbracoExtension"); }
		}

		///<summary>
		/// Upload file
		///</summary>
		[ImplementPropertyType("umbracoFile")]
		public object UmbracoFile
		{
			get { return this.GetPropertyValue("umbracoFile"); }
		}
	}

	/// <summary>Member</summary>
	[PublishedContentModel("Member")]
	public partial class Member : PublishedContentModel
	{
#pragma warning disable 0109 // new is redundant
		public new const string ModelTypeAlias = "Member";
		public new const PublishedItemType ModelItemType = PublishedItemType.Member;
#pragma warning restore 0109

		public Member(IPublishedContent content)
			: base(content)
		{ }

#pragma warning disable 0109 // new is redundant
		public new static PublishedContentType GetModelContentType()
		{
			return PublishedContentType.Get(ModelItemType, ModelTypeAlias);
		}
#pragma warning restore 0109

		public static PublishedPropertyType GetModelPropertyType<TValue>(Expression<Func<Member, TValue>> selector)
		{
			return PublishedContentModelUtility.GetModelPropertyType(GetModelContentType(), selector);
		}

		///<summary>
		/// Address 01
		///</summary>
		[ImplementPropertyType("address01_Billing")]
		public string Address01_Billing
		{
			get { return this.GetPropertyValue<string>("address01_Billing"); }
		}

		///<summary>
		/// Address 01
		///</summary>
		[ImplementPropertyType("address01_Shipping")]
		public string Address01_Shipping
		{
			get { return this.GetPropertyValue<string>("address01_Shipping"); }
		}

		///<summary>
		/// Address 02
		///</summary>
		[ImplementPropertyType("address02_Billing")]
		public string Address02_Billing
		{
			get { return this.GetPropertyValue<string>("address02_Billing"); }
		}

		///<summary>
		/// Address 02
		///</summary>
		[ImplementPropertyType("address02_Shipping")]
		public string Address02_Shipping
		{
			get { return this.GetPropertyValue<string>("address02_Shipping"); }
		}

		///<summary>
		/// Alternative Email: Mandatory if user is logging in using social media.
		///</summary>
		[ImplementPropertyType("alternativeEmail")]
		public string AlternativeEmail
		{
			get { return this.GetPropertyValue<string>("alternativeEmail"); }
		}

		///<summary>
		/// Brief Description
		///</summary>
		[ImplementPropertyType("briefDescription")]
		public string BriefDescription
		{
			get { return this.GetPropertyValue<string>("briefDescription"); }
		}

		///<summary>
		/// City
		///</summary>
		[ImplementPropertyType("city_Billing")]
		public string City_Billing
		{
			get { return this.GetPropertyValue<string>("city_Billing"); }
		}

		///<summary>
		/// City
		///</summary>
		[ImplementPropertyType("city_Shipping")]
		public string City_Shipping
		{
			get { return this.GetPropertyValue<string>("city_Shipping"); }
		}

		///<summary>
		/// Credit Card Id: Id assigned to the credit card that has been submitted to Stripe
		///</summary>
		[ImplementPropertyType("creditCardId")]
		public string CreditCardId
		{
			get { return this.GetPropertyValue<string>("creditCardId"); }
		}

		///<summary>
		/// Credit Card Token
		///</summary>
		[ImplementPropertyType("creditCardToken")]
		public string CreditCardToken
		{
			get { return this.GetPropertyValue<string>("creditCardToken"); }
		}

		///<summary>
		/// Customer Id
		///</summary>
		[ImplementPropertyType("customerId")]
		public string CustomerId
		{
			get { return this.GetPropertyValue<string>("customerId"); }
		}

		///<summary>
		/// Date of Birth
		///</summary>
		[ImplementPropertyType("dateOfBirth")]
		public DateTime DateOfBirth
		{
			get { return this.GetPropertyValue<DateTime>("dateOfBirth"); }
		}

		///<summary>
		/// First Name
		///</summary>
		[ImplementPropertyType("firstName")]
		public string FirstName
		{
			get { return this.GetPropertyValue<string>("firstName"); }
		}

		///<summary>
		/// Is Facebook Account
		///</summary>
		[ImplementPropertyType("isFacebookAcct")]
		public bool IsFacebookAcct
		{
			get { return this.GetPropertyValue<bool>("isFacebookAcct"); }
		}

		///<summary>
		/// Is LinkedIn Account
		///</summary>
		[ImplementPropertyType("isLinkedInAcct")]
		public bool IsLinkedInAcct
		{
			get { return this.GetPropertyValue<bool>("isLinkedInAcct"); }
		}

		///<summary>
		/// Is Twitter Account
		///</summary>
		[ImplementPropertyType("isTwitterAcct")]
		public bool IsTwitterAcct
		{
			get { return this.GetPropertyValue<bool>("isTwitterAcct"); }
		}

		///<summary>
		/// Last Name
		///</summary>
		[ImplementPropertyType("lastName")]
		public string LastName
		{
			get { return this.GetPropertyValue<string>("lastName"); }
		}

		///<summary>
		/// Notes
		///</summary>
		[ImplementPropertyType("notes")]
		public IHtmlString Notes
		{
			get { return this.GetPropertyValue<IHtmlString>("notes"); }
		}

		///<summary>
		/// Photo
		///</summary>
		[ImplementPropertyType("photo")]
		public object Photo
		{
			get { return this.GetPropertyValue("photo"); }
		}

		///<summary>
		/// Pledges
		///</summary>
		[ImplementPropertyType("pledges")]
		public string Pledges
		{
			get { return this.GetPropertyValue<string>("pledges"); }
		}

		///<summary>
		/// Postal Code
		///</summary>
		[ImplementPropertyType("postalCode_Billing")]
		public string PostalCode_Billing
		{
			get { return this.GetPropertyValue<string>("postalCode_Billing"); }
		}

		///<summary>
		/// Postal Code
		///</summary>
		[ImplementPropertyType("postalCode_Shipping")]
		public string PostalCode_Shipping
		{
			get { return this.GetPropertyValue<string>("postalCode_Shipping"); }
		}

		///<summary>
		/// Reviews: The following are reviews submitted for campaigns of interest.
		///</summary>
		[ImplementPropertyType("reviews")]
		public IEnumerable<IPublishedContent> Reviews
		{
			get { return this.GetPropertyValue<IEnumerable<IPublishedContent>>("reviews"); }
		}

		///<summary>
		/// State/Providence
		///</summary>
		[ImplementPropertyType("stateprovidence_Billing")]
		public string Stateprovidence_Billing
		{
			get { return this.GetPropertyValue<string>("stateprovidence_Billing"); }
		}

		///<summary>
		/// State/Providence
		///</summary>
		[ImplementPropertyType("stateprovidence_Shipping")]
		public string Stateprovidence_Shipping
		{
			get { return this.GetPropertyValue<string>("stateprovidence_Shipping"); }
		}

		///<summary>
		/// Is Approved
		///</summary>
		[ImplementPropertyType("umbracoMemberApproved")]
		public bool UmbracoMemberApproved
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberApproved"); }
		}

		///<summary>
		/// Comments
		///</summary>
		[ImplementPropertyType("umbracoMemberComments")]
		public string UmbracoMemberComments
		{
			get { return this.GetPropertyValue<string>("umbracoMemberComments"); }
		}

		///<summary>
		/// Failed Password Attempts
		///</summary>
		[ImplementPropertyType("umbracoMemberFailedPasswordAttempts")]
		public string UmbracoMemberFailedPasswordAttempts
		{
			get { return this.GetPropertyValue<string>("umbracoMemberFailedPasswordAttempts"); }
		}

		///<summary>
		/// Last Lockout Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLockoutDate")]
		public string UmbracoMemberLastLockoutDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLockoutDate"); }
		}

		///<summary>
		/// Last Login Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastLogin")]
		public string UmbracoMemberLastLogin
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastLogin"); }
		}

		///<summary>
		/// Last Password Change Date
		///</summary>
		[ImplementPropertyType("umbracoMemberLastPasswordChangeDate")]
		public string UmbracoMemberLastPasswordChangeDate
		{
			get { return this.GetPropertyValue<string>("umbracoMemberLastPasswordChangeDate"); }
		}

		///<summary>
		/// Is Locked Out
		///</summary>
		[ImplementPropertyType("umbracoMemberLockedOut")]
		public bool UmbracoMemberLockedOut
		{
			get { return this.GetPropertyValue<bool>("umbracoMemberLockedOut"); }
		}

		///<summary>
		/// Password Answer
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalAnswer")]
		public string UmbracoMemberPasswordRetrievalAnswer
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalAnswer"); }
		}

		///<summary>
		/// Password Question
		///</summary>
		[ImplementPropertyType("umbracoMemberPasswordRetrievalQuestion")]
		public string UmbracoMemberPasswordRetrievalQuestion
		{
			get { return this.GetPropertyValue<string>("umbracoMemberPasswordRetrievalQuestion"); }
		}
	}

}



// EOF
